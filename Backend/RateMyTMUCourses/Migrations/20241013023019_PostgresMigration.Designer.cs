// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RateMyTMUCourses.Data;

#nullable disable

namespace RateMyTMUCourses.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241013023019_PostgresMigration")]
    partial class PostgresMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FavoritedCourses", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("text");

                    b.Property<string>("UserEmail")
                        .HasColumnType("text");

                    b.HasKey("CourseId", "UserEmail");

                    b.HasIndex("UserEmail");

                    b.ToTable("FavoritedCourses");
                });

            modelBuilder.Entity("RateMyTMUCourses.Models.Course", b =>
                {
                    b.Property<string>("CourseId")
                        .HasColumnType("text");

                    b.Property<string>("CourseAntirequisites")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseDepartment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("CourseDifficulty")
                        .HasColumnType("real");

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CoursePrerequisites")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("CourseRating")
                        .HasColumnType("real");

                    b.Property<int>("NumberOfReviews")
                        .HasColumnType("integer");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("RateMyTMUCourses.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DatePosted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Difficulty")
                        .HasColumnType("real");

                    b.Property<string>("FinalGrade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfessorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("Quality")
                        .HasColumnType("real");

                    b.HasKey("ReviewId");

                    b.HasIndex("CourseId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("RateMyTMUCourses.Models.User", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Email");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FavoritedCourses", b =>
                {
                    b.HasOne("RateMyTMUCourses.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RateMyTMUCourses.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RateMyTMUCourses.Models.Review", b =>
                {
                    b.HasOne("RateMyTMUCourses.Models.Course", null)
                        .WithMany("Reviews")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RateMyTMUCourses.Models.Course", b =>
                {
                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
